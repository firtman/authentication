{"pageProps":{"post":{"attributes":{},"html":"<h1 id=\"servers-endpoints-for-classic-login\">Server&#39;s Endpoints for Classic Login</h1>\n<p>In <code>server.js</code> let&#39;s add the following endpoints:</p>\n<h2 id=\"login\">Login</h2>\n<pre><code class=\"hljs language-js\">app.<span class=\"hljs-title function_\">post</span>(<span class=\"hljs-string\">&quot;/auth/login&quot;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> user = <span class=\"hljs-title function_\">findUser</span>(req.<span class=\"hljs-property\">body</span>.<span class=\"hljs-property\">email</span>);\n    <span class=\"hljs-keyword\">if</span> (user) {\n        <span class=\"hljs-comment\">// user exists, check password</span>\n        <span class=\"hljs-keyword\">if</span> (bcrypt.<span class=\"hljs-title function_\">compareSync</span>(req.<span class=\"hljs-property\">body</span>.<span class=\"hljs-property\">password</span>, user.<span class=\"hljs-property\">password</span>)) {\n            res.<span class=\"hljs-title function_\">send</span>({<span class=\"hljs-attr\">ok</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-attr\">email</span>: user.<span class=\"hljs-property\">email</span>, <span class=\"hljs-attr\">name</span>: user.<span class=\"hljs-property\">name</span>});\n        } <span class=\"hljs-keyword\">else</span> {\n            res.<span class=\"hljs-title function_\">send</span>({<span class=\"hljs-attr\">ok</span>: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Data is invalid&#x27;</span>});            \n        }\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-comment\">// User doesn&#x27;t exist</span>\n        res.<span class=\"hljs-title function_\">send</span>({<span class=\"hljs-attr\">ok</span>: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Data is invalid&#x27;</span>});\n    }\n});\n</code></pre>\n<h2 id=\"registration\">Registration</h2>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">findUser</span>(<span class=\"hljs-params\">email</span>) {\n    <span class=\"hljs-keyword\">const</span> results = db.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">users</span>.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">u</span>=&gt;</span>u.<span class=\"hljs-property\">email</span>==email);\n    <span class=\"hljs-keyword\">if</span> (results.<span class=\"hljs-property\">length</span>==<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">undefined</span>;\n    <span class=\"hljs-keyword\">return</span> results[<span class=\"hljs-number\">0</span>];\n}\n\napp.<span class=\"hljs-title function_\">post</span>(<span class=\"hljs-string\">&quot;/auth/register&quot;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">var</span> salt = bcrypt.<span class=\"hljs-title function_\">genSaltSync</span>(<span class=\"hljs-number\">10</span>);\n    <span class=\"hljs-keyword\">var</span> hash = bcrypt.<span class=\"hljs-title function_\">hashSync</span>(req.<span class=\"hljs-property\">body</span>.<span class=\"hljs-property\">password</span>, salt);\n\n    <span class=\"hljs-keyword\">const</span> user = {\n        <span class=\"hljs-attr\">name</span>: req.<span class=\"hljs-property\">body</span>.<span class=\"hljs-property\">name</span>,\n        <span class=\"hljs-attr\">email</span>: req.<span class=\"hljs-property\">body</span>.<span class=\"hljs-property\">email</span>,\n        <span class=\"hljs-attr\">password</span>: hash\n    };\n    <span class=\"hljs-keyword\">const</span> userFound = <span class=\"hljs-title function_\">findUser</span>(req.<span class=\"hljs-property\">body</span>.<span class=\"hljs-property\">email</span>);\n\n    <span class=\"hljs-keyword\">if</span> (userFound) {\n        <span class=\"hljs-comment\">// User already registered</span>\n        res.<span class=\"hljs-title function_\">send</span>({<span class=\"hljs-attr\">ok</span>: <span class=\"hljs-literal\">false</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;User already exists&#x27;</span>});\n    } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-comment\">// New User</span>\n        db.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">users</span>.<span class=\"hljs-title function_\">push</span>(user);\n        db.<span class=\"hljs-title function_\">write</span>();\n        res.<span class=\"hljs-title function_\">send</span>({<span class=\"hljs-attr\">ok</span>: <span class=\"hljs-literal\">true</span>});\n    }\n});\n</code></pre>\n<p>Now in <code>API.js</code> we need to add the client-side calls</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-attr\">login</span>: <span class=\"hljs-keyword\">async</span> (user) =&gt; {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable constant_\">API</span>.<span class=\"hljs-title function_\">makePostRequest</span>(<span class=\"hljs-variable constant_\">API</span>.<span class=\"hljs-property\">endpoint</span> + <span class=\"hljs-string\">&quot;login&quot;</span>, user);\n},\n<span class=\"hljs-attr\">register</span>: <span class=\"hljs-keyword\">async</span> (user) =&gt; {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable constant_\">API</span>.<span class=\"hljs-title function_\">makePostRequest</span>(<span class=\"hljs-variable constant_\">API</span>.<span class=\"hljs-property\">endpoint</span> + <span class=\"hljs-string\">&quot;register&quot;</span>, user);\n},\n</code></pre>\n","slug":"server-endpoints","title":"Server Endpoints","section":"Classic Login","icon":"user-secret","filePath":"/Users/firt/Library/Mobile Documents/com~apple~CloudDocs/Trainings/FEM/Authentication/fullstack-authentication/lessons/02-classic-login/B-server-endpoints.md","nextSlug":"/authentication/lessons/classic-login/calling-apis","prevSlug":"/authentication/lessons/classic-login/form-accessibility"}},"__N_SSG":true}